@using SIP.UI.Models.Sectors
@using MudBlazor
@using SIP.UI.Models.Users

<MudDialog>

    <DialogContent>

        <MudStack AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mb-2" Color="Color.Error" Size="Size.Large" />
            <MudText Typo="Typo.h5" Align="Align.Center" class="mb-2" Color="Color.Error">
                Confirmar exclusão de usuário
            </MudText>
        </MudStack>

        <MudPaper Class="pa-3 mt-3" Elevation="0" Style="background-color: rgba(255, 0, 0, 0.05); border-radius: 8px;">
            <MudText Class="mb-4">
                Você tem certeza que deseja excluir permanentemente o usuário abaixo?
            </MudText>

            <MudStack Spacing="0">
                <MudText Typo="Typo.body2">Nome: <b>@UserToDelete?.FullName</b></MudText>
                <MudText Typo="Typo.body2">Login: <b>@UserToDelete?.Login</b></MudText>
                <MudText Typo="Typo.body2" Class="mt-2">Setor: <b>@UserToDelete?.Sector!.Acronym - @UserToDelete?.Sector!.Name</b></MudText>
            </MudStack>

        </MudPaper>

        <MudAlert Severity="Severity.Warning" Variant="Variant.Text" Dense="true" Class="mt-4" Icon="@Icons.Material.Filled.Warning">
            <b>Atenção:</b> Esta ação não pode ser desfeita.
        </MudAlert>

    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Error" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" OnClick="Submit">
            Excluir
        </MudButton>
        <MudButton Color="Color.Secondary" Variant="Variant.Outlined" OnClick="Cancel">
            Cancelar
        </MudButton>
    </DialogActions>

</MudDialog>

@code {

    /// <summary>
    /// The MudBlazor dialog instance for controlling dialog actions.
    /// </summary>
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; } = default!;

    /// <summary>
    /// The user to be deleted in the dialog.
    /// </summary>
    [Parameter]
    public User? UserToDelete { get; set; }

    /// <summary>
    /// Confirms the deletion and closes the dialog with a positive result.
    /// </summary>
    private void Submit() => 
        MudDialog.Close(DialogResult.Ok(true));

    /// <summary>
    /// Cancels the deletion and closes the dialog without changes.
    /// </summary>
    private void Cancel() => 
        MudDialog.Cancel();

}